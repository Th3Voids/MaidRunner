name: witchcraft-cybersecurity
version: "0.19.0"
summary: Your OPSEC companion
grade: stable
confinement: strict
base: core24
type: app
compression: lzo
license: GPL-3.0+
source-code: https://github.com/cosmic-zip/witch_craft
description: |
  **WITCH_CRAFT**

  WITCH_CRAFT is a versatile task automation software designed to serve as the
  foundation for various cybersecurity modules. It provides capabilities for tasks
  such as forensic research, OSINT (Open Source Intelligence), scanning, backup and
  copying, intrusion testing of applications and APIs, and more.

  **Visit the wiki:**

  https://cosmic-zip.github.io/wiki/wiki.html

  **Plugins**

  The Witch_Craft project is extensible through static files and Rust code. Moreover, it is possible to extend its functionalities using `db.json`. This file contains a list of small shell scripts, which means you can integrate anything that interacts with the terminal using ARGS (argsv, readargs(), sys.args(), etc).

  **Note**: There is a Python script called sort.py inside /var/witch_craft/witch_spells/dataset. It is used to create a sorted version of the dataset.

  **RC File**

  To record logs of all your interactions, create a file named .witchrc in your home folder and add the following line to it:

  path_log_file=~/my_frog.jsonl

  You can use ~/ to represent your home directory or specify the complete path, such as:

  path_log_file=/path/to/my/file.jsonl


  **Instalation**

  The project initially includes a set of default files. These files
  are created using the best possible data analysis techniques, and
  their final versions are merged into the main project.

  The witch_spells package also provide:

    * Unique Wordlists : _moth_ (16Gb) and _ladybug_ (1Gb)
    * Default Credentials Database
    * IP Geolocation
    * IP Reputation/Score
    * A Set of Social Media Pages for Evil Twin Attacks
    * General Wordlists for Directories and Subdomains
    * MAC Address Vendor Database
    * Usernames Wordlist
    * XSS Wordlist
    * And more, UwU!
platforms:
  amd64:
    build-on: [amd64]
    build-for: [amd64]
  arm64:
    build-on: [arm64]
    build-for: [arm64]

environment:
  WITCH_SPELLS_ROOT_DIR: $SNAP/var/witch_craft/witch_spells/

parts:
  witchspells:
    source: witch_spells
    plugin: dump

  witchcraft:
    after: [witchspells]
    plugin: rust
    source: ./witch_craft
    stage-snaps:
      - chromium/latest/stable
    stage-packages:
      - nmap
      - whois
      - dirb
      - dnsenum
      - libc-bin
      - iproute2
      - xxd
      - iptables
      - coreutils
      - wget
      - curl
      - dnsutils
      - traceroute
      - openssl
      - openssh-server
      - xattr
      - libimage-exiftool-perl
      - tor
      - foremost
      - pkg-config
      - libssl-dev
      - steghide
      - doas
      - nala
      - libwebkit2gtk-4.1-dev
      - build-essential
      - file
      - libxdo-dev
      - 7zip
      - libayatana-appindicator3-dev
      - librsvg2-dev

apps:
  witchcraft:
    command: bin/witch_craft
    plugs: [home, network, network-bind, removable-media]
